#include <iostream>
#include <bits/stdc++.h>
using namespace std;
struct point{
    int x;
    int y;
    int s;
    point (int x, int y, int s)
    : x (x), y (y), s (s)
    {}
};

bool isValid (int x, int y, int n){
    if (x >= 1 && x <= n && y >= 1 && y <= n)
        return true;
    return false;    
}

int findDistance (int n, int x1, int y1, int x2, int y2){
    bool visited [n+1][n+1];
    for (int i = 1; i <= n; ++i)
    {
        for (int j = 1; j <= n; ++j)
            visited [i][j] = false;
    }
    point p = point (x1, y1, 0);
    queue <point> q;
    q.push (p);
    visited [x1][y1] = true;
    while (!q.empty ()){
        point p = q.front ();
        q.pop ();
        if (p.x == x2 && p.y == y2)
            return p.s;
        
        int d [][2] = {{2,-1},{2,1},{1,-2},{1,2},{-2,1},{-2,-1},{-1,2},{-1,-2}};
        
        for (int i = 0; i < 8; ++i){
            point t = point (p.x + d [i][0], p.y + d [i][1], p.s + 1);
            if (isValid (t.x, t.y, n) && !visited [t.x][t.y]){
                visited [t.x][t.y] = true;
                q.push (t);
            }
        }
        
    }
    
    return 0;    
}

int main() {
	int t = 0;
	cin >> t;
	while (t--){
	    int n = 0;
	    cin >> n;
	    
	    int x1,y1=0;
	    cin >> x1 >> y1;
	    
	    int x2, y2 = 0;
	    cin >> x2 >> y2;
	    
	    int dist = findDistance (n, x1, y1, x2, y2);
	    cout <<  dist << endl;
	   
	}
	return 0;
}