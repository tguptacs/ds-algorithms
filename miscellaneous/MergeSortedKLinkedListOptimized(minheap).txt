struct compare {
	bool operator () (Node* a, Node* b){
		return a->data > b->data;
	}
};


Node * mergeKLists(Node *arr[], int N)
{
 	priority_queue <Node*, vector<Node*>, compare> h;
	Node* head = NULL;
 	for (int i = 0;i<N;i++){
 		h.push (arr [i]);
 	}

 	Node* temp = head;
 	while (!h.empty()){
 		Node* top = h.top ();
 		if (!temp)
 		    temp = top;
 		else{
 		    temp->next = top;
 		    temp = temp->next;
 		}
 		h.pop ();

 		if (top->next != NULL){
 			h.push (top->next);
 		}
		if (head == NULL){
			head = temp;
		}
 	}
 	temp->next = NULL;
	return head;
}

