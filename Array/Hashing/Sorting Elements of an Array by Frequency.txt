#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct key {
	int elem;
	int freq;
	
	key (int f, int i)
	: freq (f), elem (i)
	{}
	
	bool operator < (const key &k) const{
		if (freq == k.freq)
			return elem < k.elem;
		return freq < k.freq;	
	}
};
void swap (int &a, int &b){
	int temp = a;
	a = b;
	b = temp;
}
void PrintSortedFrequency (int a [], int n){
	int arr [200] = {0};
	int i = 0;
	for (int j = 0; j < n; ++j){
		arr [j] = a[j];
	}
	while (i < n){
		int pos = arr [i]-1;
		if (arr [i] > 0 && arr [pos] > 0)
		{
		    if (arr [pos] == 0)
		        i++;
		    else      
			    swap (arr [i], arr [pos]);
			arr [pos] = -1;
		}
		else if (arr [i] > 0){
			arr [pos]--;
			arr [i++] = 0;
		}
		else
			i++;
	}

	map <key, int> m;
	for (int j = 0; j < n; ++j)
	{
		int pos = a [j]-1;
		if (arr [pos] < 0){
			key k (arr [pos], a [j]);
			if (m.find (k) == m.end ()){
				m [k] = a [j];
			}
		}
	}
	for (map <key, int>::iterator it = m.begin (); it != m.end (); ++it){
		key k = it->first;
	    for (int j = 0; j < abs (k.freq); ++j){
		    cout << it->second << " ";
	    }
	}	
}

int main() {
	int test = 0;
	cin >> test;
	while (test-- > 0){
		int n = 0;
		
		cin >> n;
		int arrN [n] = {0};
		
		for (int i = 0; i < n; ++i)
			cin >> arrN [i];
		
		PrintSortedFrequency (arrN, n);
		cout << endl;
	}
	return 0;
}