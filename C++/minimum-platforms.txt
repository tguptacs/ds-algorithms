#include <iostream>
#include <bits/stdc++.h>
using namespace std;

bool customsort(const pair<int,char> &a,const pair<int,char> &b)
{
    if(a.first == b.first) return a.second < b.second;
    return a.first < b.first;
}

int findNumberOfPlatforms (int arr[], int dep[], int n)
{
    if (n <= 1)
        return n;
    
    vector <pair<int, char>> v;
    for (int i = 0; i < n; ++i) 
        v.push_back (make_pair (arr [i], 'A'));
    for (int i = 0; i < n; ++i)
        v.push_back (make_pair (dep [i], 'D'));
   
    sort (v.begin (), v.end (), customsort);
    int num = 0;
    int count = 0;
    for (int i = 0; i < v.size (); ++i){
        pair <int, char> p = v[i];
        if (p.second == 'A')
            count++;
        else
            count--;
            
        if (count > num)
            num = count;
    }
    return num;
}

int main() {
	int t = 0;
	cin >> t;
	while (t-- > 0){
	    int n = 0;
	    cin >> n;
	    int arr [n] = {0};
	    int dep [n] = {0};
	    
	    for (int i = 0; i < n; ++i) cin >> arr [i];
	    for (int i = 0; i < n; ++i) cin >> dep [i];
	    
	    int num = findNumberOfPlatforms (arr, dep, n);
	    cout << num << "\n";
	}
	return 0;
}