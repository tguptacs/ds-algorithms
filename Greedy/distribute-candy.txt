1. Each child must have at least one candy.
2. Children with a higher rating get more candies than their neighbors.
Input 2:
    A = [1, 5, 2, 1]

Output 2:
    7
	
int Solution::candy(vector<int> &A) {
    int n = A.size ();
    int candyCount [n];
    memset (candyCount, 0, n);
    // sort (A.begin(), A.end());
    int count = 0; int lastC = 1;
    // int last = A [0];
    candyCount [0] = 1;
    // candyCount [n-1] = 1;
    for (int i = 1; i < n; ++i)
    {
        if (A[i] > A[i-1])
            candyCount [i] = 1 + candyCount [i-1]; 
        else
            candyCount [i] = 1;
    }
    for (int i = n-2; i >= 0; --i)
    {
        int cur = 1;
        if (A[i] > A[i+1])
            cur = 1 + candyCount [i+1];   
        candyCount [i] = max (cur, candyCount [i]);
    }
    
    for (int i = 0; i < n; ++i){
        count += candyCount [i];
    }
    return count;
}
