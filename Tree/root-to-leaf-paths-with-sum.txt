/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
void addPaths(TreeNode* A, int B, vector<vector<int> >& v, vector<int> path)
{
    if (A == NULL)
        return;
    B -= A->val;
    path.push_back(A->val);
    
    if(A->left == NULL && A->right == NULL)
    {
        if (B == 0)
        {
            v.push_back(path);
        }
        return;
    }
    else
    {
        addPaths(A->left, B, v, path);
        addPaths(A->right, B, v, path);
    }
}
vector<vector<int> > Solution::pathSum(TreeNode* A, int B) {
    vector<vector<int>> v;
    
    if (A == NULL)
        return v;
    
    vector<int> path;
    addPaths(A, B, v, path);          
    return v;
}
