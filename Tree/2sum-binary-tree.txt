/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
void collect(TreeNode* A, vector<int> &s)
{
    if(A==NULL)
        return;
    collect(A->left, s);
    s.push_back(A->val);
    collect(A->right, s);
}
int Solution::t2Sum(TreeNode* A, int B) {
    if(A==NULL)
        return 0;
    vector<int> v;
    collect(A, v);
    int low = 0;
    int high = v.size()-1;
    while(low <= high)
    {
        if((v[low] + v[high]) > B)
            high--;
        else if((v[low] + v[high]) < B)
            low++;
        else
            return v[low] != v[high];
    }
    return 0;
}
